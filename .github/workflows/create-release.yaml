name: Create Release

on:
  workflow_dispatch:
    branches:
      - main

env:
  XOJO_PROJECT_FILE: Xojo-GitHub-Actions.xojo_project

jobs:
  setup:
    name: Setup GitHub Workspace
    runs-on: [self-hosted, macOS, Xojo]
    steps:
      - name: Cleanup GitHub Workspace
        run: |
          rm -rf "${{ github.workspace }}"
          sync
          mkdir -p "${{ github.workspace }}"
      - name: Check out Repository
        uses: actions/checkout@v3

  project-version:
    name: Project Version
    runs-on: [self-hosted, macOS, Xojo]
    needs: setup
    outputs:
      version-tag: ${{ steps.project-version.outputs.version-tag }}
    steps:
      - name: Get Xojo Project Version
        id: project-version
        run: |
          VERSION_MAJOR=$(grep -o "MajorVersion=.*" "${{ github.workspace }}/${{ env.XOJO_PROJECT_FILE }}" | awk -F'=' '{print $2}')
          VERSION_MINOR=$(grep -o "MinorVersion=.*" "${{ github.workspace }}/${{ env.XOJO_PROJECT_FILE }}" | awk -F'=' '{print $2}')
          VERSION_SUB=$(grep -o "SubVersion=.*" "${{ github.workspace }}/${{ env.XOJO_PROJECT_FILE }}" | awk -F'=' '{print $2}')
          VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_SUB
          VERSION_TAG=v.$VERSION
          echo "Xojo Project Version: $VERSION"
          echo "Version Tag: $VERSION_TAG"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "version-tag=$VERSION_TAG" >> $GITHUB_OUTPUT
      - name: Check Release Version Tag
        id: github-tag
        uses: actions/github-script@v6
        with:
          script: |
            try {
              console.log('Check: Expect that Tag ${{ env.VERSION_TAG }} does not exist');
              const getRefResponse = await github.rest.git.getRef({
                owner: context.repo.owner,
                ref: "tags/${{ env.VERSION_TAG }}",
                repo: context.repo.repo,
              });
              // console.log(getRefResponse);
              if (getRefResponse.status === 200) {
                console.log('Tag ${{ env.VERSION_TAG }} exists');
                core.setFailed('Tag ${{ env.VERSION_TAG }} already exists. Xojo Project Version needs to be changed.');
              } else {
                console.log('Tag ${{ env.VERSION_TAG }} does not exist');
              }
            } catch(error) {
              console.log('Tag ${{ env.VERSION_TAG }} does not exist');
            }

  xojo:
    name: Xojo
    uses: ./.github/workflows/xojo.yaml
    needs: [setup, project-version]
    with:
      build-windows-x86-32bit: true
      build-windows-x86-64bit: true
      build-linux-x86-32bit: true
      build-linux-x86-64bit: true
      build-macos-universal: true
      build-stage-code: final
      artifacts-retention-days: 7
    secrets:
      MACOS_CODESIGN_IDENT: ${{ secrets.MACOS_CODESIGN_IDENT }}
      MACOS_CODESIGN_CERTIFICATE: ${{ secrets.MACOS_CODESIGN_CERTIFICATE }}
      MACOS_CODESIGN_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CODESIGN_CERTIFICATE_PASSWORD }}
      MACOS_CODESIGN_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_CODESIGN_KEYCHAIN_PASSWORD }}
      MACOS_NOTARIZATION_ACCOUNT: ${{ secrets.MACOS_NOTARIZATION_ACCOUNT }}
      MACOS_NOTARIZATION_TEAMID: ${{ secrets.MACOS_NOTARIZATION_TEAMID }}
      MACOS_NOTARIZATION_APPSPECIFIC_PASSWORD: ${{ secrets.MACOS_NOTARIZATION_APPSPECIFIC_PASSWORD }}
      WINDOWS_CODESIGN_CERTIFICATE: ${{ secrets.WINDOWS_CODESIGN_CERTIFICATE }}
      WINDOWS_CODESIGN_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CODESIGN_CERTIFICATE_PASSWORD }}

  create-release:
    name: Create Release
    runs-on: [self-hosted, macOS, Xojo]
    needs: [project-version, xojo]
    steps:
      - name: Create release
        id: create_release
        # https://github.com/softprops/action-gh-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.project-version.outputs.version-tag }}
          name: ${{ needs.project-version.outputs.version-tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: false
          # There will be no error if the Release does not include all Targets 
          files: |
            ${{ needs.xojo.outputs.build-linux-x86-32bit-tgz-asset }}
            ${{ needs.xojo.outputs.build-linux-x86-64bit-tgz-asset }}
            ${{ needs.xojo.outputs.build-windows-x86-32bit-zip-asset }}
            ${{ needs.xojo.outputs.build-windows-x86-32bit-setup-asset }}
            ${{ needs.xojo.outputs.build-windows-x86-64bit-zip-asset }}
            ${{ needs.xojo.outputs.build-windows-x86-64bit-setup-asset }}
            ${{ needs.xojo.outputs.build-macos-universal-dmg-asset }}
            ${{ needs.xojo.outputs.build-macos-universal-zip-asset }}
